
nginx:
  image: pixelfordinner/nginx
  container_name: bam_api-nginx
  restart: unless-stopped
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - "./docker/proxy/conf.d:/etc/nginx/conf.d:ro"
    - "./docker/proxy/vhost.d:/etc/nginx/vhost.d:ro"
    - "./docker/proxy/certs:/etc/nginx/certs:ro"
    - "./docker/proxy/html:/usr/share/nginx/html"

docker-gen:
  image: jwilder/docker-gen
  container_name: bam_api-docker-gen
  restart: unless-stopped
  links:
    - nginx
  volumes_from:
    - nginx
  volumes:
    - "/var/run/docker.sock:/tmp/docker.sock:ro"
    - "./docker/templates:/etc/docker-gen/templates:ro"
    - "./docker/proxy/conf.d:/etc/nginx/conf.d:rw"
  entrypoint: /usr/local/bin/docker-gen -notify-sighup bam_api-nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

lets-encrypt-companion:
  image: jrcs/letsencrypt-nginx-proxy-companion
  container_name: bam_api-ssl
  restart: unless-stopped
  links:
    - nginx
    - docker-gen
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "./docker/proxy/vhost.d:/etc/nginx/vhost.d:rw"
    - "./docker/proxy/certs:/etc/nginx/certs:rw"
  environment:
    - "NGINX_DOCKER_GEN_CONTAINER=nginx_proxy-docker_gen"

graphql:
  image: quay.io/tychot/tql
  container_name: bam_api-graphql
  restart: unless-stopped
  environment:
    - NODE_ENV=staging
    - VIRTUAL_HOST=bam-api.cloud.bam.tech
    - VIRTUAL_NETWORK=nginx-proxy
    - VIRTUAL_PORT=3000
    - LETSENCRYPT_HOST=bam-api.cloud.bam.tech
    - LETSENCRYPT_EMAIL=tychot@bam.tech
  ports:
    - "3000"
  links:
    - postgres

postgres:
  image: postgres:9.6
  container_name: bam_api-postgres
  restart: unless-stopped
  environment:
    - POSTGRES_USER=tql
    - POSTGRES_PASSWORD=itstqldude
  volumes:
    - ./docker/database:/var/lib/postgresql/data
