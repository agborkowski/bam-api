version: "2"

volumes:
  database:
    driver: local
  
networks:
  proxy-tier:
    driver: bridge

services:
  nginx:
    image: pixelfordinner/nginx
    container_name: nginx_proxy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./docker/conf.d:/etc/nginx/conf.d:ro"
      - "./docker/vhost.d:/etc/nginx/vhost.d:ro"
      - "./docker/certs:/etc/nginx/certs:ro"
      - "/usr/share/nginx/html"
    networks:
      - proxy-tier
      
  docker-gen:
    image: quay.io/tychot/docker-gen-nginx
    container_name: nginx_proxy-docker_gen
    restart: unless-stopped
    depends_on:
      - nginx
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./docker/conf.d:/etc/nginx/conf.d:rw"
    networks:
      - proxy-tier
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx_proxy-nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  lets-encrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx_proxy-lets_encrypt
    restart: unless-stopped
    depends_on:
      - nginx
      - docker-gen
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./docker/vhost.d:/etc/nginx/vhost.d:rw"
      - "./docker/certs:/etc/nginx/certs:rw"
    environment:
      - "NGINX_DOCKER_GEN_CONTAINER=nginx_proxy-docker_gen"
    networks:
      - proxy-tier

  graphql:
    image: quay.io/tychot/tql
    container_name: bam_api-graphql
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - VIRTUAL_HOST=bam-api.cloud.bam.tech
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=bam-api.cloud.bam.tech
      - LETSENCRYPT_EMAIL=tychot@bam.tech
    ports:
      - "3000"
    depends_on:
      - postgres
    networks:
      - proxy-tier

  postgres:
    image: postgres:9.6
    container_name: bam_api-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tql
      - POSTGRES_PASSWORD=itstqldude
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - proxy-tier
